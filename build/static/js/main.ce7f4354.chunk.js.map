{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","Sorting Visualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","SortingVisualizer","props","state","deck","dealSize","visibleDeck","visibleImgs","img","handleChange","bind","handleSubmit","tempVal","tempImg","event","this","setState","target","value","alert","preventDefault","dealCards","x","y","randomIndex","random","arrayCards","document","getElementsByClassName","cardOneIdx","cardTwoIdx","cardOneStyle","style","cardTwoStyle","color","setTimeout","backgroundColor","cardOneImg","imgArr","doAnimations","n","key","insertionSortHelper","getInsertionSortAnimations","min_Idx","temp","selectionSortHelper","getSelectionSortAnimations","bubbleSortHelper","getBubbleSortAnimations","className","type","data-toggle","data-target","id","onClick","mergeSort","insertionSort","selectionSort","bubbleSort","onSubmit","onChange","min","max","map","idx","src","process","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce7f4354.chunk.js","sourcesContent":["import SortingVisualizer from \"../Sorting Visualizer/SortingVisualizer\";\r\n\r\nexport function getBubbleSortAnimations(array){\r\n    const animations =[];\r\n    if(array.length <= 1) return array;\r\n    bubbleSortHelper(array, animations)\r\n    return animations\r\n}\r\n\r\nfunction bubbleSortHelper(array, animations){\r\n    let n = array.length;\r\n    for(let i = 0; i < n-1; i++){\r\n        for(let j = 0; j < n-i-1; j++){\r\n            // Push them once to change color\r\n            animations.push([j, j+1]);\r\n            // Push them again to revert to normal\r\n            animations.push([j, j+1]);\r\n            if (array[j] > array[j+1]){\r\n                //Swap images to indicate sorting \r\n                animations.push([j, j+1]);\r\n                let temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n            }\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    insertionSortHelper(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction insertionSortHelper(array, animations){\r\n    let n = array.length;\r\n    for(let i = 1; i < n; ++i){\r\n        let key = array[i];\r\n        let j = i-1;\r\n        animations.push([j,i]);\r\n        animations.push([j,i]);\r\n        while(j >= 0 && array[j] > key){\r\n            animations.push([j+1,j])\r\n            array[j+1] = array[j];\r\n            j = j-1;\r\n        }\r\n        array[j+1] = key;\r\n    }\r\n}\r\n\r\nexport function getSelectionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    selectionSortHelper(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction selectionSortHelper(array, animations){\r\n    const n = array.length;\r\n    for(let i = 0; i < n-1; i++){\r\n        let min_Idx = i;\r\n        for(let j = i+1; j < n; j++){\r\n            animations.push([j,min_Idx]);\r\n            animations.push([j,min_Idx]);\r\n            if(array[j] < array[min_Idx]){\r\n                min_Idx = j;\r\n            }\r\n        }\r\n        animations.push([min_Idx,i]);\r\n        let temp = array[min_Idx];\r\n        array[min_Idx] = array[i];\r\n        array[i] = temp;\r\n    }\r\n}\r\n\r\nexport function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, i]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, i]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([j, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([j, j]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {getBubbleSortAnimations, getMergeSortAnimations, getInsertionSortAnimations, getSelectionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport './Sorting Visualizer.css';\r\n\r\nconst ANIMATION_SPEED_MS = 5;\r\n\r\nconst PRIMARY_COLOR = '';\r\nconst SECONDARY_COLOR = 'rgba(163,173,56,.5)';\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            deck: [],\r\n            dealSize: 10,\r\n            visibleDeck: [],\r\n            visibleImgs: [],\r\n            img: [],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        let tempVal = 0;\r\n        let tempImg = 0;\r\n        for(let i = 0; i<52; i++){\r\n            switch(i%4){\r\n                case 0:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"H.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 1:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"D.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 2:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"C.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 3:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"S.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    handleChange(event){\r\n        this.setState({dealSize: event.target.value})\r\n    }\r\n    handleSubmit(event){\r\n        alert('Deal: '+this.state.dealSize);\r\n        event.preventDefault();\r\n        this.dealCards();\r\n    }\r\n    componentDidMount(){\r\n        this.dealCards();\r\n    }\r\n    dealCards (){\r\n        let x = [];\r\n        let y = [];\r\n        for(let i=0; i < this.state.dealSize; i++){\r\n            let randomIndex = Math.floor(Math.random()*this.state.deck.length);\r\n            x.push(this.state.deck[randomIndex]);\r\n            y.push(this.state.img[randomIndex]);\r\n        }\r\n        this.setState({visibleDeck: x, visibleImgs: y});\r\n    }\r\n    doAnimations(animations){\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayCards = document.getElementsByClassName('Card');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [cardOneIdx, cardTwoIdx] = animations[i];\r\n                const cardOneStyle = arrayCards[cardOneIdx].style;\r\n                const cardTwoStyle = arrayCards[cardTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                cardOneStyle.backgroundColor = color;\r\n                cardTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            } else {\r\n                setTimeout(() => {\r\n                const [cardOneIdx, cardTwoIdx] = animations[i];\r\n                const cardOneImg = this.state.img[cardOneIdx]\r\n                let imgArr = this.state.visibleImgs;\r\n                imgArr[cardTwoIdx] = cardOneImg;\r\n                imgArr[cardOneIdx] = this.state.visibleImgs[cardTwoIdx];\r\n                this.setState({visibleImgs: imgArr});\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n    mergeSort(){\r\n        const animations = getMergeSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    insertionSort(){\r\n        const animations = getInsertionSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    selectionSort(){\r\n        const animations = getSelectionSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n    \r\n    bubbleSort(){\r\n        const animations = getBubbleSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand md navbar-dark bg-dark fixed-top\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <p className=\"navbar-brand\">Sorting Visualizer</p>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.dealCards()}>Shuffle Deck</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.mergeSort()}>Merge Sort</button> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-12 text-center\">\r\n                    <form className=\"sizeForm\" onSubmit={this.handleSubmit}>\r\n                        Cards Dealt\r\n                        <br></br><input className=\"dealSize\" type=\"number\" value={this.state.dealSize} onChange={this.handleChange} min=\"1\" max=\"52\"/>\r\n                        <br></br><input className=\"btn btn-secondary btn-sm\" type=\"submit\" value=\"Submit\"></input>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row text-center\">\r\n                    {this.state.visibleDeck.map((idx)=> (\r\n                                    <div className=\"col-xs-2 text-center\">\r\n                                        <img className=\"Card\" \r\n                                            style={{backgroundColor: PRIMARY_COLOR}} \r\n                                            src={(process.env.PUBLIC_URL+this.state.img[idx])}>\r\n                                        </img>\r\n                                    </div>))};\r\n                </div>\r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport SortingVisualizer from './Sorting Visualizer/SortingVisualizer'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}