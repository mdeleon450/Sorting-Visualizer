{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\maikd\\\\Documents\\\\GitHub\\\\Sorting-Visualizer\\\\src\\\\Sorting Visualizer\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport { getBubbleSortAnimations, getMergeSortAnimations, getInsertionSortAnimations, getSelectionSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './Sorting Visualizer.css';\nconst ANIMATION_SPEED_MS = 5;\nconst PRIMARY_COLOR = '';\nconst SECONDARY_COLOR = 'rgba(163,173,56,.5)';\nSortingVisualizer;\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: [],\n      dealSize: 10,\n      visibleDeck: [],\n      visibleImgs: [],\n      img: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    let tempVal = 0;\n    let tempImg = 0;\n\n    for (let i = 0; i < 52; i++) {\n      switch (i % 4) {\n        case 0:\n          tempVal = i % 13 + 1;\n          tempImg = '/img/' + tempVal + \"H.png\";\n          this.state.deck.push(tempVal);\n          this.state.img.push(tempImg);\n          break;\n\n        case 1:\n          tempVal = i % 13 + 1;\n          tempImg = '/img/' + tempVal + \"D.png\";\n          this.state.deck.push(tempVal);\n          this.state.img.push(tempImg);\n          break;\n\n        case 2:\n          tempVal = i % 13 + 1;\n          tempImg = '/img/' + tempVal + \"C.png\";\n          this.state.deck.push(tempVal);\n          this.state.img.push(tempImg);\n          break;\n\n        case 3:\n          tempVal = i % 13 + 1;\n          tempImg = '/img/' + tempVal + \"S.png\";\n          this.state.deck.push(tempVal);\n          this.state.img.push(tempImg);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      dealSize: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Deal: ' + this.state.dealSize);\n    event.preventDefault();\n    this.dealCards();\n  }\n\n  componentDidMount() {\n    this.dealCards();\n  }\n\n  dealCards() {\n    let x = [];\n    let y = [];\n\n    for (let i = 0; i < this.state.dealSize; i++) {\n      let randomIndex = Math.floor(Math.random() * this.state.deck.length);\n      x.push(this.state.deck[randomIndex]);\n      y.push(this.state.img[randomIndex]);\n    }\n\n    this.setState({\n      visibleDeck: x,\n      visibleImgs: y\n    });\n  }\n\n  doAnimations(animations) {\n    for (let i = 0; i < animations.length; i++) {\n      const arrayCards = document.getElementsByClassName('Card');\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [cardOneIdx, cardTwoIdx] = animations[i];\n        const cardOneStyle = arrayCards[cardOneIdx].style;\n        const cardTwoStyle = arrayCards[cardTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          cardOneStyle.backgroundColor = color;\n          cardTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [cardOneIdx, cardTwoIdx] = animations[i];\n          const cardOneImg = this.state.img[cardOneIdx];\n          let imgArr = this.state.visibleImgs;\n          imgArr[cardTwoIdx] = cardOneImg;\n          imgArr[cardOneIdx] = this.state.visibleImgs[cardTwoIdx];\n          this.setState({\n            visibleImgs: imgArr\n          });\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.visibleDeck);\n    this.doAnimations(animations);\n  }\n\n  insertionSort() {\n    const animations = getInsertionSortAnimations(this.state.visibleDeck);\n    this.doAnimations(animations);\n  }\n\n  selectionSort() {\n    const animations = getSelectionSortAnimations(this.state.visibleDeck);\n    this.doAnimations(animations);\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.visibleDeck);\n    this.doAnimations(animations);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand md navbar-dark bg-dark fixed-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-toggler\",\n          type: \"button\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \"#navbarResponsive\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navbar-brand\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse\",\n          id: \"navbarResponsive\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav ml-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-md\",\n                type: \"button\",\n                onClick: () => this.dealCards(),\n                children: \"Shuffle Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-md\",\n                type: \"button\",\n                onClick: () => this.mergeSort(),\n                children: \"Merge Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-md\",\n                type: \"button\",\n                onClick: () => this.insertionSort(),\n                children: \"Insertion Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-md\",\n                type: \"button\",\n                onClick: () => this.selectionSort(),\n                children: \"Selection Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-md\",\n                type: \"button\",\n                onClick: () => this.bubbleSort(),\n                children: \"Bubble Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"sizeForm\",\n          onSubmit: this.handleSubmit,\n          children: [\"Cards Dealt\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"dealSize\",\n            type: \"number\",\n            value: this.state.dealSize,\n            onChange: this.handleChange,\n            min: \"1\",\n            max: \"52\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-secondary btn-sm\",\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center\",\n        children: [this.state.visibleDeck.map(idx => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-2 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Card\",\n            style: {\n              backgroundColor: PRIMARY_COLOR\n            },\n            src: process.env.PUBLIC_URL + this.state.img[idx],\n            alt: \"c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 37\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/maikd/Documents/GitHub/Sorting-Visualizer/src/Sorting Visualizer/SortingVisualizer.jsx"],"names":["React","getBubbleSortAnimations","getMergeSortAnimations","getInsertionSortAnimations","getSelectionSortAnimations","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","Component","constructor","props","state","deck","dealSize","visibleDeck","visibleImgs","img","handleChange","bind","handleSubmit","tempVal","tempImg","i","push","event","setState","target","value","alert","preventDefault","dealCards","componentDidMount","x","y","randomIndex","Math","floor","random","length","doAnimations","animations","arrayCards","document","getElementsByClassName","isColorChange","cardOneIdx","cardTwoIdx","cardOneStyle","style","cardTwoStyle","color","setTimeout","backgroundColor","cardOneImg","imgArr","mergeSort","insertionSort","selectionSort","bubbleSort","render","map","idx","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {getBubbleSortAnimations, getMergeSortAnimations, getInsertionSortAnimations, getSelectionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport './Sorting Visualizer.css';\r\n\r\nconst ANIMATION_SPEED_MS = 5;\r\n\r\nconst PRIMARY_COLOR = '';\r\nconst SECONDARY_COLOR = 'rgba(163,173,56,.5)';\r\nSortingVisualizer;\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            deck: [],\r\n            dealSize: 10,\r\n            visibleDeck: [],\r\n            visibleImgs: [],\r\n            img: [],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        let tempVal = 0;\r\n        let tempImg = 0;\r\n        for(let i = 0; i<52; i++){\r\n            switch(i%4){\r\n                case 0:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"H.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 1:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"D.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 2:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"C.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                case 3:\r\n                    tempVal = (i%13)+1;\r\n                    tempImg = '/img/'+tempVal+\"S.png\";\r\n                    this.state.deck.push(tempVal);\r\n                    this.state.img.push(tempImg);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    handleChange(event){\r\n        this.setState({dealSize: event.target.value})\r\n    }\r\n    handleSubmit(event){\r\n        alert('Deal: '+this.state.dealSize);\r\n        event.preventDefault();\r\n        this.dealCards();\r\n    }\r\n    componentDidMount(){\r\n        this.dealCards();\r\n    }\r\n    dealCards (){\r\n        let x = [];\r\n        let y = [];\r\n        for(let i=0; i < this.state.dealSize; i++){\r\n            let randomIndex = Math.floor(Math.random()*this.state.deck.length);\r\n            x.push(this.state.deck[randomIndex]);\r\n            y.push(this.state.img[randomIndex]);\r\n        }\r\n        this.setState({visibleDeck: x, visibleImgs: y});\r\n    }\r\n    doAnimations(animations){\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayCards = document.getElementsByClassName('Card');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [cardOneIdx, cardTwoIdx] = animations[i];\r\n                const cardOneStyle = arrayCards[cardOneIdx].style;\r\n                const cardTwoStyle = arrayCards[cardTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                cardOneStyle.backgroundColor = color;\r\n                cardTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            } else {\r\n                setTimeout(() => {\r\n                const [cardOneIdx, cardTwoIdx] = animations[i];\r\n                const cardOneImg = this.state.img[cardOneIdx]\r\n                let imgArr = this.state.visibleImgs;\r\n                imgArr[cardTwoIdx] = cardOneImg;\r\n                imgArr[cardOneIdx] = this.state.visibleImgs[cardTwoIdx];\r\n                this.setState({visibleImgs: imgArr});\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n    mergeSort(){\r\n        const animations = getMergeSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    insertionSort(){\r\n        const animations = getInsertionSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    selectionSort(){\r\n        const animations = getSelectionSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n    \r\n    bubbleSort(){\r\n        const animations = getBubbleSortAnimations(this.state.visibleDeck);\r\n        this.doAnimations(animations);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand md navbar-dark bg-dark fixed-top\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <p className=\"navbar-brand\">Sorting Visualizer</p>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.dealCards()}>Shuffle Deck</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.mergeSort()}>Merge Sort</button> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-secondary btn-md\" type=\"button\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-12 text-center\">\r\n                    <form className=\"sizeForm\" onSubmit={this.handleSubmit}>\r\n                        Cards Dealt\r\n                        <br></br><input className=\"dealSize\" type=\"number\" value={this.state.dealSize} onChange={this.handleChange} min=\"1\" max=\"52\"/>\r\n                        <br></br><input className=\"btn btn-secondary btn-sm\" type=\"submit\" value=\"Submit\"></input>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row text-center\">\r\n                    {this.state.visibleDeck.map((idx)=> (\r\n                                    <div className=\"col-xs-2 text-center\">\r\n                                        <img className=\"Card\" \r\n                                            style={{backgroundColor: PRIMARY_COLOR}} \r\n                                            src={(process.env.PUBLIC_URL+this.state.img[idx])}\r\n                                            alt=\"c\">\r\n                                        </img>\r\n                                    </div>))};\r\n                </div>\r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}